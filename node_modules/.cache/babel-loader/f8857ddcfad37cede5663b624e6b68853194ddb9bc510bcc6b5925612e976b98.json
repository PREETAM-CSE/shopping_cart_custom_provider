{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PreetamKumar\\\\Desktop\\\\javascript\\\\React\\\\Functional_Component_Demo\\\\src\\\\Components\\\\Blog.js\",\n  _s = $RefreshSig$();\n//Blogging App with Firebase\nimport { useState, useRef, useEffect } from \"react\";\n\n//Import fireStore reference from frebaseInit file\nimport { db } from \"../firebaseInit\";\n\n//Import all the required functions from fireStore\nimport { collection, doc, getDocs, onSnapshot, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Blog() {\n  _s();\n  const [formData, setformData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [blogs, setBlogs] = useState([]);\n  const titleRef = useRef(null);\n  useEffect(() => {\n    titleRef.current.focus();\n  }, []);\n  useEffect(() => {\n    /*********************************************************************** */\n    /** get all the documents from the fireStore using getDocs() */\n    /*********************************************************************** */\n    /* async function fetchData(){\n         const snapShot =await getDocs(collection(db, \"blogs\"));\n         console.log(snapShot);\n          const blogs = snapShot.docs.map((doc) => {\n             return{\n                 id: doc.id,\n                 ...doc.data()\n             }\n         })\n         console.log(blogs);\n         setBlogs(blogs); \n      }\n      fetchData();\n     /*********************************************************************** */\n\n    // Real time update of blogs\n\n    const unsub = onSnapshot(collection(db, \"blogs\"), snapshaot);\n  }, []);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    titleRef.current.focus();\n\n    // Commenting setBlogs() as realtime Updates will be recieved from the database\n    //setBlogs([{title: formData.title,content:formData.content}, ...blogs]);\n\n    /*********************************************************************** */\n    /** Add a new document with an auto generated id. */\n    /*********************************************************************** */\n\n    const docRef = doc(collection(db, \"blogs\"));\n    await setDoc(docRef, {\n      title: formData.title,\n      content: formData.content,\n      createdOn: new Date()\n    });\n\n    /*********************************************************************** */\n\n    setformData({\n      title: \"\",\n      content: \"\"\n    });\n  }\n  async function removeBlog(i) {\n    setBlogs(blogs.filter((blog, index) => index !== i));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Write a Blog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          label: \"Title\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Enter the Title of the Blog here..\",\n            ref: titleRef,\n            value: formData.title,\n            onChange: e => setformData({\n              title: e.target.value,\n              content: formData.content\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          label: \"Content\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"input content\",\n            placeholder: \"Content of the Blog goes here..\",\n            required: true,\n            value: formData.content,\n            onChange: e => setformData({\n              title: formData.title,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Blogs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), blogs.map((blog, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            removeBlog(i);\n          },\n          className: \"btn remove\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n//Row component to introduce a new row section in the form\n_s(Blog, \"jNOza9qVP+7Zr7Yz1p65ko32pO8=\");\n_c = Blog;\nfunction Row(props) {\n  const {\n    label\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), props.children, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Row;\nvar _c, _c2;\n$RefreshReg$(_c, \"Blog\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"names":["useState","useRef","useEffect","db","collection","doc","getDocs","onSnapshot","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","Blog","_s","formData","setformData","title","content","blogs","setBlogs","titleRef","current","focus","unsub","snapshaot","handleSubmit","e","preventDefault","docRef","createdOn","Date","removeBlog","i","filter","blog","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","Row","label","placeholder","ref","value","onChange","target","required","map","onClick","_c","props","_c2","$RefreshReg$"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Functional_Component_Demo/src/Components/Blog.js"],"sourcesContent":["//Blogging App with Firebase\nimport { useState, useRef, useEffect } from \"react\";\n\n//Import fireStore reference from frebaseInit file\nimport { db } from \"../firebaseInit\";\n\n//Import all the required functions from fireStore\nimport { collection, doc, getDocs, onSnapshot, setDoc} from \"firebase/firestore\"; \n\nexport default function Blog(){\n\n    const [formData, setformData] = useState({title:\"\", content:\"\"})\n    const [blogs, setBlogs] =  useState([]);\n\n    const titleRef = useRef(null);\n\n    useEffect(() => {\n        titleRef.current.focus()\n    },[]);\n\n    useEffect(() => {\n        \n        /*********************************************************************** */\n        /** get all the documents from the fireStore using getDocs() */ \n        /*********************************************************************** */\n       /* async function fetchData(){\n            const snapShot =await getDocs(collection(db, \"blogs\"));\n            console.log(snapShot);\n\n            const blogs = snapShot.docs.map((doc) => {\n                return{\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            console.log(blogs);\n            setBlogs(blogs); \n\n        }\n\n        fetchData();\n        /*********************************************************************** */\n\n        // Real time update of blogs\n\n        const unsub = onSnapshot(collection(db,\"blogs\"), (snapshaot))\n    },[]);\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        titleRef.current.focus();\n\n        // Commenting setBlogs() as realtime Updates will be recieved from the database\n        //setBlogs([{title: formData.title,content:formData.content}, ...blogs]);\n\n        /*********************************************************************** */\n        /** Add a new document with an auto generated id. */ \n        /*********************************************************************** */\n\n        const docRef = doc(collection(db, \"blogs\"))\n            \n        await setDoc(docRef, {\n                title: formData.title,\n                content: formData.content,\n                createdOn: new Date()\n            });\n\n        /*********************************************************************** */\n        \n        setformData({title: \"\", content: \"\"});\n    }\n\n    async function removeBlog(i){\n\n        setBlogs( blogs.filter((blog,index)=> index !== i));\n \n     }\n\n    return(\n        <>\n        <h1>Write a Blog!</h1>\n        <div className=\"section\">\n\n        {/* Form for to write the blog */}\n            <form onSubmit={handleSubmit}>\n                <Row label=\"Title\">\n                        <input className=\"input\"\n                                placeholder=\"Enter the Title of the Blog here..\"\n                                ref = {titleRef}\n                                value={formData.title}\n                                onChange = {(e) => setformData({title: e.target.value, content:formData.content})}\n                        />\n                </Row >\n\n                <Row label=\"Content\">\n                        <textarea className=\"input content\"\n                                placeholder=\"Content of the Blog goes here..\"\n                                required\n                                value={formData.content}\n                                onChange = {(e) => setformData({title: formData.title,content: e.target.value})}\n                        />\n                </Row >\n         \n                <button className = \"btn\">ADD</button>\n            </form>\n                     \n        </div>\n\n        <hr/>\n\n        {/* Section where submitted blogs will be displayed */}\n        <h2> Blogs </h2>\n        {blogs.map((blog,i) => (\n            <div className=\"blog\" key={i}>\n                <h3>{blog.title}</h3>\n                <hr/>\n                <p>{blog.content}</p>\n\n                <div className=\"blog-btn\">\n                        <button onClick={() => {\n                             removeBlog(i)\n                        }}\n                        className=\"btn remove\">\n\n                            Delete\n\n                        </button>\n                </div>\n            </div>\n        ))}\n        \n        </>\n        )\n    }\n\n//Row component to introduce a new row section in the form\nfunction Row(props){\n    const{label} = props;\n    return(\n        <>\n        <label>{label}<br/></label>\n        {props.children}\n        <hr />\n        </>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}